
 #Для каждого упражнения написать программную реализацию.
#Код пишите в файлах с расширением .py в кодировке UTF-8 (в PyCharm работает по умолчанию). Каждую задачу необходимо
#сохранять в отдельный файл. Рекомендуем использовать английские имена, например, les_6_task_1.
#Для оценки «Отлично» необходимо выполнить все требования, указанные в задании и примечаниях.
#
#    Подсчитать, сколько было выделено памяти под переменные в ранее разработанных программах
#    в рамках первых трех уроков. Проанализировать результат и определить программы с наиболее
#    эффективным использованием памяти. Примечание: По аналогии с эмпирической оценкой алгоритмов
#    идеальным решением будет:
#    ● выбрать хорошую задачу, которую имеет смысл оценивать по памяти;
#    ● написать 3 варианта кода (один у вас уже есть);
#    ● проанализировать 3 варианта и выбрать оптимальный;
#    ● результаты анализа (количество занятой памяти в вашей среде разработки) вставить в виде комментариев
#    в файл с кодом. Не забудьте указать версию и разрядность вашей ОС и интерпретатора Python;
#    ● написать общий вывод: какой из трёх вариантов лучше и почему. Надеемся, что вы не испортили программы,
#    добавив в них множество sys.getsizeof после каждой переменной, а проявили творчество, фантазию и создали
#    универсальный код для замера памяти.

import sys

#3.1 Сформировать из введенного числа обратное
# по порядку входящих в него цифр и вывести на экран.
# Например, если введено число 3486, надо вывести 6843.

digit = input("введите натуральное число")
x = 0
a = 1
b = 10
new_digit = ''

while x != len(digit):

    digit_ = int(digit) // a
    digit_ = digit_ % b
    new_digit += str(digit_)
    a *= 10
    x += 1

print(f'Развернутое число = {new_digit}')

#3.2. Сформировать из введенного числа обратное
# по порядку входящих в него цифр и вывести на экран.
# Например, если введено число 3486, надо вывести 6843.

digital = int(input("введите натуральное число"))
revers_d = 0
b = 10

while digital > 0:
    revers_d = revers_d * b + digital % b
    digital //= b

print(f'Развернутое число = {revers_d}')

#3.3 Сформировать из введенного числа обратное(самый оптимальный по памяти)
# по порядку входящих в него цифр и вывести на экран.
# Например, если введено число 3486, надо вывести 6843.
num = int(input('Введите целое число: '))
result = 0
while num > 0:
    result = result * 10 + num % 10
    num = num // 10
print(result)



[print(f'{itm:>15}', end='|') for itm in locals()]
print(f'\nвеса равны')
[print(f'{sys.getsizeof(itm):>15}', end='|') for itm in locals().values()]

#key_ = [itm for itm in locals()]
#val_ = [sys.getsizeof(itm) for itm in locals().values()]


#[print(f'{key_[i]:>15} весит {val_[i]}') for i in range(len(key_))]

#print(f'\nобщий вес равен :{sum([sys.getsizeof(itm) for itm in val_])}')
print(f'\nобщий вес равен :{sum([sys.getsizeof(itm) for itm in locals().values()])}')
